
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <title>Cart</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
  <link rel="stylesheet" href="/user/css/home.css">
  <link rel="stylesheet" href="/user/css/unAuthorised.css">
  <link rel="stylesheet" href="/user/css/style.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
  <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
</head>
<style>

.footer-fixed {
  position: fixed;
  left: 0;
  bottom: 0;
  width: 100%;
  background-color: #f8f9fa; 
  padding: 20px; 
  text-align: center;
}
</style>
<body>

  <%- include('../partials/navbar') %>

  <div class="item mt-4"></div>
 



<section class="bg-white">
    <div class="container-fluid p-5">
      <div class="row">
       
        <div class="col-lg-9">
          <div class="card border rounded shadow">
            <div class="m-4 rounded shadow-5">
              <h4 class="card-title mb-4">Your shopping cart</h4>
              <table class="table">
                <thead>
                  <tr>
                    <th scope="col" class="h5">items</th>
                    <th scope="col">Price</th>
                    <th scope="col">Quantity</th>
                    <th scope="col">total</th>
                    <th scope="col">remove</th>
                  </tr>
                </thead>
                <tbody>
                  


                  <% let totalQuantity = 0; %>
                  <% let totalPrice = 0; %>
                  <% if (cart && cart.items && cart.items.length> 0) { %>
                   
                    <% cart.items.forEach(item=> { %>

                      <% totalQuantity += item.quantity; %>
                      <% 
                        let itemPrice = item.productId?.Price || 0;
                        if (item.productId && item.productId.hasCategoryOffer) {
                          itemPrice = item.productId.discountedPrice;
                        }
                        totalPrice += itemPrice * item.quantity;
                      %>

                      <tr data-item-id="<%= item._id %>">
                        <td>
                          <div class="d-flex align-items-center">
                            <% if (item.productId && item.productId.images &&
                              Array.isArray(item.productId.images) && item.productId.images.length> 0) {
                              %>
                              <img src="<%= item.productId.images[0] %>" class="border rounded me-3"
                                style="width: 60px; height: 60px;" />
                              <% } else { %>
                                <img src="#" class="border rounded me-3" style="width: 60px; height: 60px;" />
                                <% } %>
                                  <div class="flex-column ms-4">
                                    <h6>
                                      <% if (item.productId) { %>
                                        <%= item.productId.ProductName %>
                                          <% } else { %>
                                            Product Not Available
                                            <% } %>
                                    </h6>
                                  </div>

                          </div>
                        </td>

                        <td id="totalPrice_<%= item._id %>">
                          <% if (item.productId && item.productId.hasCategoryOffer) { %>
                            <p class="mb-2">
                              <span class="text-decoration-line-through text-muted">&#x20B9;<%= item.productId.Price %></span><br>
                              <strong class="text-success">&#x20B9;<%= item.productId.discountedPrice %></strong>
                              <span class="badge bg-danger ms-1"><%= item.productId.categoryOffer.discountPercentage %>% OFF</span>
                            </p>
                          <% } else { %>
                            <p class="mb-2"><strong>&#x20B9;<%= item.productId ? item.productId.Price : 0 %></strong></p>
                          <% } %>
                        </td>

                        <td>
                         
                          <div class="input-group" style="width: 120px;">
                            <div class="input-group" style="width: 120px;">
                              <div class="input-group" style="width: 120px;">
  <% if (item.quantity <= 1) { %>
    <button disabled class="btn btn-dark btn-sm" type="button" onclick="updateCartQuantity('<%= item._id %>', -1)" id="decrementButton">-</button>
  <% } else { %>
    <button class="btn btn-dark btn-sm" type="button" onclick="updateCartQuantity('<%= item._id %>', -1)" id="decrementButton">-</button>
  <% } %>
  <input type="number" disabled class="form-control allQuantity" value="<%= item.quantity %>" id="cartQuantity<%= item._id %>" min="1" max="<%= item.productId?.AvailableQuantity || 1 %>" onchange="updateCartQuantity('<%= item._id %>', this.value)">
  <% if (item.quantity >= item.productId?.AvailableQuantity) { %>
    <button class="btn btn-dark btn-sm" type="button" onclick="notInStock('<%= item._id %>', 1)">+</button>
  <% } else { %>
    <button class="btn btn-dark btn-sm" type="button" onclick="updateCartQuantity('<%= item._id %>', 1)">+</button>
  <% } %>
</div>

<% if (item.productId?.AvailableQuantity == 0) { %>
    <p class="text-danger">Out of Stock</p>
    <% } %>

                        
                        </td>
                        <td id="totalapriceofoneproduct_<%= item._id %>">
                          <% 
                            let currentItemPrice = item.productId?.Price || 0;
                            if (item.productId && item.productId.hasCategoryOffer) {
                              currentItemPrice = item.productId.discountedPrice;
                            }
                          %>
                          <p class="mb-2">
                            <strong>&#x20B9;<%= (currentItemPrice * item.quantity).toFixed(2) %></strong>
                          </p>
                        </td>





                        <td>
                          <div>
                        <a href="#" class="align-middle remove-from-cart"
                         data-product-id="<%= item.productId?._id %>"
                         data-cart-id="<%= cart._id %>"
                         data-product-name="<%= item.productId?.ProductName %>">

                         <i class="fa fa-trash-can fa-md" style="color: #c01b1b;"></i>
                         </a>
                         </div>

                        </td>
                      </tr>
                      <% }) %>
                       

                   


                        <% } else { %>
                          <tr>
                            <td colspan="5">
                              <p>Your cart is currently empty.</p>
                            </td>
                          </tr>
                          <% } %>
                





                 

                </tbody>
              </table>
            </div>
          </div>
        </div>
        <!-- cart -->
        <!-- summary -->
        <div class="col-lg-3">
          <!--<div class="card mb-3 border shadow">
            <div class="card-body">
              <form>
                <div class="form-group">
                  <label class="form-label">Have coupon?</label>
                  <div class="input-group">
                    <input type="text" class="form-control border" name="" placeholder="Coupon code" />
                    <button class="btn btn-light border">Apply</button>
                  </div>
                </div>
              </form>
            </div>
          </div> -->
          <div class="card shadow border">
            <div class="card-body">
              <div class="d-flex justify-content-between">
                <p class="mb-2">Total Quantity:</p>
                <p class="mb-2" id="totalQuantity"><strong><%= totalQuantity %></strong></p>
              </div>
              <div class="d-flex justify-content-between">
                <p class="mb-2">Total price:</p>
                <p class="mb-2" id="totalPrice"><strong>&#x20B9;<%= totalPrice.toFixed(2) %></strong></p>
                
              </div>
              <!--<div class="d-flex justify-content-between">
                <p class="mb-2">Discount:</p>
                <p class="mb-2 text-success">-â‚¹</p>
              </div>
            <div class="d-flex justify-content-between">
                <p class="mb-2">TAX:</p>
                <p class="mb-2" id="tax"><strong>&#x20B9;</strong></p>
              </div>-->
              <hr />
              <div class="d-flex justify-content-between">
                <p class="mb-2">Total price:</p>
                <p class="mb-2" id="totalPrice"><strong>&#x20B9;<%= totalPrice.toFixed(2) %></strong></p>

              </div>
              <div class="mt-3">
                <a href="#" class="btn btn-success w-100 shadow-0 mb-2" id="checkoutButton">Make Purchase</a>
                <a href="/userhome" class="btn btn-light w-100 border mt-2"> Back to shop </a>
              </div>
            </div>
          </div>
        </div>
        
        <!-- summary -->
        <!-- <div class="col-lg-12">
          <div class="card border rounded shadow">
            <div class="m-4 rounded shadow-5 m-5">
              <h1 class="text-center bg-black" style="color: #ffff; padding-top: 30px;">YOUR CART</h1>
              <div class="d-flex justify-content-center">
                <button class="btn btn-dark p-2 rounded-0" style="width: 500px;">
                  continue shopping
                </button>
              </div>
            </div>
          </div>
        </div> -->
      </div>
    </div>
  </section>

  <footer class="footer-fixed">
  <%- include('../partials/user-footer')  %>
  </footer>
  <style>
    input[type=number]::-webkit-inner-spin-button, 
input[type=number]::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
}
    </style>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.bundle.min.js"></script>

  <!-- Include SweetAlert library -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script>
  document.getElementById("checkoutButton").addEventListener("click", function() {
    const items = document.querySelectorAll(".allQuantity");
    let outOfStock = false;
    let quantityExceeded = false;
    let cartEmpty = true;

   
  items.forEach(function(item) {
    const quantity = parseInt(item.value);
    if (quantity > 0) {
      cartEmpty = false;
    }
  });

   if (cartEmpty) {
 
    Swal.fire("Error!", "Your cart is empty. Please add items to proceed.", "error");
    return;
  }


    items.forEach(function(item) {
      const quantity = parseInt(item.value);
      console.log(quantity,'quantity');
      const availableQuantity = parseInt(item.getAttribute("max"));
      console.log(availableQuantity,"availableQuantity");
      if (quantity > availableQuantity) {
        quantityExceeded = true;
      }
      if (quantity > 0 && quantity > availableQuantity) {
        outOfStock = true;
        quantityExceeded = true;
      }
      console.log(outOfStock,'-----');
    });
    if (outOfStock) {
      Swal.fire("Error!", "Some items in your cart are out of stock.", "error");
      return
    } else if ( quantityExceeded) {
      Swal.fire("Error!", "Some items in your cart have a quantity exceeding the available stock.", "error");
      return
    } else {
      window.location.href = "/checkout";
    }
  });

  
</script>

  <script>

  function updateCartQuantity(itemId, change) {

  const decrementButton = document.getElementById('decrementButton');
  const inputValue = document.querySelector('.allQuantity').value;




  const newQuantity = parseInt(change);
  fetch('/updateQuantity', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      itemId: itemId,
      newQuantity: newQuantity,
    }),
  })
    .then((response) => response.json())
    .then((data) => {
      if (data.success) {
        inputValue
        window.location.reload()

        const totalQuantityElement = document.getElementById('totalQuantity');
      if (totalQuantityElement) {
        totalQuantityElement.textContent = data.totalQuantity;
      }
        
      
        console.log('Quantity updated successfully');
   
      } else {
        console.error('Error updating quantity:', data.message);
       
      }
    })
    .catch((error) => {
      console.error('Error updating quantity:', error);
     
    });
}

function notInStock() {
  Swal.fire("Error!", "Quantity exceeded", "error");
  return;
}




  
    function addToCart(itemId) {
      fetch('/user/addToCart', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          itemId: itemId,
        }),
      })
        .then((response) => response.json())
        .then((data) => {
          if (data.success) {
         
            updateCartUI();
            swal("Success!", "Item added to cart", "success");
          } else {
            console.error('Error adding product to the cart:', data.message);
            swal("Error!", "Failed to add item to cart", "error");
          }
        })
        .catch((error) => {
          console.error('Error adding product to the cart:', error);
          swal("Error!", "Failed to add item to cart", "error");
        });
    }
    function updateCartUI() {
      window.location.reload();
    }
  
  


  

    async function removeFromCart(productId) {
  try {
    const response = await fetch(`/removeFromCart`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        productId: productId,
      }),
    });

    const data = await response.json();

    if (data.success) {
      
      Swal.fire({
        icon: 'success',
        title: 'Success',
        text: 'Item removed from cart successfully',
      }).then(() => {
     
        window.location.reload();
      });
    } else {
     
      console.error('Error removing item from cart:', data.message);
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'Failed to remove item from cart',
      });
    }
  } catch (error) {
    console.error('Error removing item from cart:', error);
    Swal.fire({
      icon: 'error',
      title: 'Error',
      text: 'Failed to remove item from cart',
    });
  }
}




 
  document.addEventListener('DOMContentLoaded', function () {
    const removeButtons = document.querySelectorAll('.remove-from-cart');

    removeButtons.forEach(button => {
      button.addEventListener('click', function (event) {
        event.preventDefault();

        const productId = button.getAttribute('data-product-id');

      
        removeFromCart(productId);
      });
    });
  });




  
</script>


















