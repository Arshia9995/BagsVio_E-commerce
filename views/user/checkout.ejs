<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Checkout </title>
 
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KyZXEAg3QhqLMpG8r+8fhAXLRk2vvoC2f3B09zVXn8CA5QIVfZOJ3BCsw2P0p/We" crossorigin="anonymous">



	<link rel="stylesheet" href="css/demo.css">
    <style>
        .coupon-card-container {
            width: 200px;
            margin-right: auto; 
            margin-left: 0; 
        }
    </style>
  
  </head>
  <body>
    <%- include("header") %>
   

    

 <header class="intro">

 
 </header>
  
 <main>
        <div class="container">
            <div class="py-5 text-center">
                <h2>Checkout</h2>
            </div>
          
            <form action="/placeorder" method="POST">
                <div class="row">
                 
                    <div class="col-md-8 order-md-1">
                        <div class="card mt-3">
                            <div class="card-header">
                                <h5 class="card-title">Shipping Address</h5>
                            </div>

                          

                            <div class="container">
                              <% if (addresses && addresses.length > 0) { %>
                                <% addresses?.forEach(data => { %>
                  
                                    <div class="col-md-4">
                                        <div class="card mb-2" style="width: 18rem;">
                                            <div class="card-body " style="height: 220px;">
                                              <div class="card-body d-flex flex-column justify-content-between" style="height: 220px;">
                                              
                                                <label for="<%= data._id %>" class="d-flex align-items-center">
                                                    <input type="radio" id="<%= data._id %>" name="selectedAddress" value="<%= data._id %>">
                                                    <p class="card-title mb-0 ms-2">Deliver to this address</p>
                                                </label>
                                                
                                                <h6 class="card-title "> <%= data.name %></h5>
                                                <h6 class="card-subtitle mb-2 "><%= data.street %></h6>
                                                <h6 class="card-subtitle mb-2 "><%= data.city %></h6>
                                                <h6 class="card-subtitle mb-2"><%= data.state %></h6>
                                                <h6 class="card-subtitle mb-2 "><%= data.pincode %></h6>
                                                <h6 class="card-subtitle mb-3 "><%= data.mobile %></h6>
                                              </div>
                                            </div>
                                        </div>
                                    </div>

                            
                            
                                <% }) %>
                            <% } else { %>
                                <p>No addresses found.</p>
                            <% } %>
                       

                            <% let totalPrice = 0; %>
                            
    <% userCart.items.forEach(item => { %>
        <% 
            let itemPrice = item.productId.Price;
            if (item.productId && item.productId.hasCategoryOffer) {
                itemPrice = item.productId.discountedPrice;
            }
            let itemTotal = itemPrice * item.quantity;
            totalPrice += itemTotal;
        %>
    <% }); %>


                            <div class="col">
                              <div class="card justify-content-center align-items-center" style="width: 18rem;">
                                  <div class="card-body" style="height: 220px;">
                                      <i class="fa fa-plus" id="addAddressIcon" aria-hidden="true" style="font-size: 100px;"></i><br>
                                      <p class="card-link justify-content-center align-items-center" id="addAddressBtn">Add Address</p>
                                  </div>
                            </div>
                        </div>
                        <div id="newAddressForm" style="display: none;">
                          <input type="text" id="name" placeholder="Name">
                          <input type="text" id="address" placeholder="Address">
                          <input type="text" id="pincode" placeholder="Pin Code">
                          <input type="text" id="city" placeholder="City">
                          <input type="text" id="street" placeholder="Street">
                          <input type="text" id="state" placeholder="State">
                          <input type="text" id="mobile" placeholder="Mobile">
                          <button id="saveAddressBtn" type="button">Save Address</button>
                      </div>
                      
                            </div>
                            </div>
                       
                        <hr class="mb-4">
                        <h4 class="mb-3">Payment</h4>
                        
                          <div class="custom-control custom-radio">
                            <input id="credit" name="paymentMethod" type="radio" class="custom-control-input" value="Online Payment" checked required>
                            <label class="custom-control-label" for="credit">Online Payment</label>
                          </div>
                     
<% if (totalPrice > 1000) { %>
    <div class="custom-control custom-radio">
        <input id="debit" name="paymentMethod" type="radio" class="custom-control-input" value="Cash On Delivery" required disabled>
        <label class="custom-control-label" for="debit">Cash On Delivery (Not Available)</label>
    </div>
<% } else { %>
    <div class="custom-control custom-radio">
        <input id="debit" name="paymentMethod" type="radio" class="custom-control-input" value="Cash On Delivery" required>
        <label class="custom-control-label" for="debit">Cash On Delivery</label>
    </div>
<% } %>
                          <div class="custom-control custom-radio">
                            <input id="debit" name="paymentMethod" type="radio" class="custom-control-input" value="Wallet" required>
                            <label class="custom-control-label" for="debit">Wallet</label>
                          </div>
                    </div>

                  
                    <div class="col-md-4 order-md-2 mb-4">
                        <h4 class="d-flex justify-content-between align-items-center mb-3">
                            <span class="text-muted">Your cart</span>
                           
                     
 
                            <span class="badge badge-secondary badge-pill">3</span>
                        </h4>
                        <ul class="list-group mb-3">
                          <% userCart.items.forEach(item => { %>
                            <li class="list-group-item d-flex justify-content-between lh-condensed">
                                <div class="d-flex flex-column">
                                    <div>
                                        <h6 class="my-0"><%= item.productId.ProductName%></h6>
                                    </div>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <small class="text-muted">Quantity: <%= item.quantity%>  </small>
                                        <% 
                                            let checkoutItemPrice = item.productId.Price;
                                            if (item.productId && item.productId.hasCategoryOffer) {
                                                checkoutItemPrice = item.productId.discountedPrice;
                                            }
                                        %>
                                        <% if (item.productId && item.productId.hasCategoryOffer) { %>
                                            <div class="text-end">
                                                <span class="text-decoration-line-through text-muted">₹<%= item.productId.Price * item.quantity %></span><br>
                                                <span class="text-success fw-bold">₹<%= checkoutItemPrice * item.quantity %></span>
                                                <span class="badge bg-danger ms-1"><%= item.productId.categoryOffer.discountPercentage %>% OFF</span>
                                            </div>
                                        <% } else { %>
                                            <span class="text-muted">Price: ₹<%= checkoutItemPrice * item.quantity %></span>
                                        <% } %>
                                    </div>
                                </div>
                            </li>
                        <% }); %>

                   
            <li id="discountAmount" class="list-group-item d-flex justify-content-between" style="margin-top: 10px;">
          
           
            <span>Discount Amount:</span>

            <strong id="discountAmount">0.00</strong>
                            
           
                
                  
        <li id="totalPrice" class="list-group-item d-flex justify-content-between" style="margin-top: 10px;">
          
           
            <span>Total Price:</span>
            
            <strong>₹ <%= totalPrice  %></strong>
        </li>
        



                  
                    <li class="list-group-item">
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="Enter Coupon Code" id="couponCodeInput">
                            <button class="btn btn-outline-secondary" type="button" id="applyCouponBtn">Apply</button>
                            <button class="btn btn-outline-secondary" type="button" id="removeCouponBtn" style="display: none;">Remove</button>
                        </div>
                    </li>
           </ul>
           <button type="button" id="showCouponsBtn" class="btn btn-primary">Show Available Coupons</button>



           <div id="errorContainer" style="display: none;" class="alert alert-danger" role="alert">
          
        </div>

        <div class="col-md-9 ms-sm-auto col-lg-10 px-md-4 mt-5"> 
           
               


            <div id="couponsModal" class="modal fade" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="exampleModalLabel">Available Coupons</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <div id="availableCouponsContainer">
                                <% if (coupons.length > 0) { %>
                                <% coupons.forEach(coupon => { %>
                                    <div class="card mb-3">
                                        <div class="card-body">
                                            <p>Coupon Name: <%= coupon.couponName %></p>
                                            <p>Coupon Code: <%= coupon.couponCode %></p>
                                            <p>Discount: <%= coupon.discountPercentage %></p>
                                           
                                        </div>
                                    </div>
                                <% }) %>
                                <% } else { %>
                                    <p>No available coupons.</p>
                                <% } %>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
             <form class="p-2">              
                  <div class="text-end"  style="padding-top: 75%;" >
                      <button class="btn btn-success btn-block text-end" type="submit"  >Continue to checkout</button>
                  </div>
            </form>
        </div>
    </main>
 
</form>
  

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-U1DAWAznBHeqEIlVSCgzq+c9gqGAJn5c/t99JyeKa9xxaYpSvHU5awsuZVVFIhvj" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


  </body>
</html>
<%- include('../partials/user-footer')  %>

<script>
 
 document.addEventListener('DOMContentLoaded', function() {
   
     document.getElementById('addAddressBtn').addEventListener('click', function() {
         document.getElementById('newAddressForm').style.display = 'block'; 
     });
 
   
     document.getElementById('saveAddressBtn').addEventListener('click', async function() {
       
         const name = document.getElementById('name').value;
         const address = document.getElementById('address').value;
         const pincode = document.getElementById('pincode').value;
         const city = document.getElementById('city').value;
         const street = document.getElementById('street').value;
         const state = document.getElementById('state').value;
         const mobile = document.getElementById('mobile').value;
 
       
         try {
             const response = await fetch('/checkoutaddaddress', {
                 method: 'POST',
                 headers: {
                     'Content-Type': 'application/json'
                 },
                 body: JSON.stringify({ name, address, pincode, city, street, state, mobile })
             });
             if (response.ok) {
               
                 document.getElementById('newAddressForm').style.display = 'none'; 
               
                 location.reload();
                 await updateAddressList();
             } else {
                 console.error('Failed to add address:', response.statusText);
             }
         } catch (error) {
             console.error('Error adding address:', error);
         }
     });
 
    
     async function updateAddressList() {
         try {
             const response = await fetch(`/getaddress/${addressId}`); 
             if (response.ok) {
                 const addresses = await response.json();
                 const addressListContainer = document.getElementById('addressListContainer');
                 addressListContainer.innerHTML = ''; 
                 addresses.forEach(address => {
                     const addressElement = document.createElement('div');
                     addressElement.textContent = address.name + ', ' + address.address;
                     addressListContainer.appendChild(addressElement);
                 });
             } else {
                 console.error('Failed to fetch addresses:', response.statusText);
             }
         } catch (error) {
             console.error('Error fetching addresses:', error);
         }
     }
 
    
     updateAddressList();
 });
 </script>

 
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const paymentButton = document.getElementById('paymentButton');
        const checkoutForm = document.getElementById('checkoutForm');
        const paymentMethodRadio = document.querySelectorAll('input[name="paymentMethod"]');

         
        function updatePaymentButton() {
            const selectedPaymentMethod = document.querySelector('input[name="paymentMethod"]:checked');
            if (selectedPaymentMethod && selectedPaymentMethod.value === 'Card') {
                paymentButton.textContent = 'Pay Now';
                checkoutForm.action = '/onlinepayment';  
            } else {
                paymentButton.textContent = 'Place Order';
                checkoutForm.action = '/confirmorder';  
            }
        }

        
        paymentMethodRadio.forEach(function(radio) {
            radio.addEventListener('change', updatePaymentButton);
        });

        
        updatePaymentButton();
    });
</script>


<script>
document.addEventListener('DOMContentLoaded', function() {
    const applyCouponBtn = document.getElementById('applyCouponBtn');
    const removeCouponBtn = document.getElementById('removeCouponBtn');
    const errorContainer = document.getElementById('errorContainer');

    document.getElementById('applyCouponBtn').addEventListener('click', async function() {
        const couponCode = document.getElementById('couponCodeInput').value;
        try {
            const response = await fetch('/applycoupon', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ couponCode: couponCode }),
            });
            if (response.ok) {
                const data = await response.json();
               
                document.getElementById('totalPrice').textContent = `Total Price: ₹ ${data.totalPrice}`;
                document.getElementById('discountAmount').textContent = `Discount Amount ₹ ${data.discountAmount}`;
                applyCouponBtn.style.display = 'none';
                removeCouponBtn.style.display = 'block';
                errorContainer.style.display = 'none';
                console.log(data);
            } else {
                const errorData = await response.json(); 
                showError(errorData.error);
            // document.getElementById('errorContainer').style.display = 'block';
            // document.getElementById('errorContainer').textContent = errorData.error;
            console.error('Failed to apply coupon:', errorData.error);
            }
        } catch (error) {
            showError('Error applying coupon: ' + error.message);
            console.error('Error applying coupon:', error);
        }
    });

    function showError(message) {
        errorContainer.style.display = 'block';
        errorContainer.textContent = message;
        setTimeout(() => {
            errorContainer.style.display = 'none';
        }, 5000); // Hides the error message after 5 seconds
    }
});
    document.getElementById('removeCouponBtn').addEventListener('click', async function() {
    try {
        const response = await fetch('/removecoupon', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
        });
        if (response.ok) {
            const data = await response.json();
       
            document.getElementById('totalPrice').textContent = `Total Price: ₹ ${data.totalPrice}`;
            const couponCode = document.getElementById('couponCodeInput')
            couponCode.value = ''
            applyCouponBtn.style.display = 'block';
            removeCouponBtn.style.display = 'none';
            document.getElementById('discountAmount').textContent =`Discount Amount : 0.00`
          
        } else {
            console.error('Failed to remove coupon:', response.statusText);
        }
    } catch (error) {
        console.error('Error removing coupon:', error);
    }
});

</script>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const continueToCheckoutBtn = document.querySelector('button[type="submit"]');
    const walletRadio = document.querySelector('input[value="Wallet"]');
    const totalPrice = <%= totalPrice %>;
    const walletAmount = <%= walletAmount %>;

   
    function handleButtonClick(event) {
     
        if (walletRadio.checked) {
           
            if (walletAmount < totalPrice) {
            
                Swal.fire({
                    icon: 'error',
                    title: 'Insufficient Wallet Balance',
                    text: 'Please choose another payment method or add funds to your wallet.',
                });
                event.preventDefault(); 
            }
        } else {
         
            const selectedAddress = document.querySelector('input[name="selectedAddress"]:checked');
            if (!selectedAddress) {
            
                Swal.fire({
                    icon: 'error',
                    title: 'No Address Selected',
                    text: 'Please select a shipping address or add a new address before proceeding to checkout.',
                });
                event.preventDefault(); 
            }
        }
    }
    
   
    continueToCheckoutBtn.addEventListener('click', handleButtonClick);
});


</script>


<script>
    document.addEventListener('DOMContentLoaded', function() {
        const cashOnDeliveryRadio = document.querySelector('input[value="Cash On Delivery"]');
        const totalPrice = <%= totalPrice %>;

      
        function handleButtonState() {
          
            if (totalPrice > 1000) {
                cashOnDeliveryRadio.disabled = true;
            } else {
                cashOnDeliveryRadio.disabled = false;
            }
        }

     
        handleButtonState();

      
        document.getElementById('totalPrice').addEventListener('change', handleButtonState);
    });
</script>




<script>
    document.addEventListener('DOMContentLoaded', function() {
        const showCouponsBtn = document.getElementById('showCouponsBtn');
        const couponsModal = new bootstrap.Modal(document.getElementById('couponsModal'), {});

        showCouponsBtn.addEventListener('click', async function() {
            try {
                const response = await fetch('/getcoupons'); 
                if (response.ok) {
                    const coupons = await response.json();
                    if (coupons.length === 0) {
                    
                    console.log(coupons,"cccccccccc");
                  
                    Swal.fire({
                        icon: 'error',
                        title: 'No Coupons Available',
                        text: 'There are no available coupons at the moment.'
                    });
                } else {
                    
                    displayCoupons(coupons);
                    couponsModal.show(); 
                }
                    // displayCoupons(coupons);
                    // couponsModal.show(); 
                } else {
                    console.error('Failed to fetch coupons:', response.statusText);
                }
            } catch (error) {
                console.error('Error fetching coupons:', error);
            }
        });

        function displayCoupons(coupons) {
            const couponsContainer = document.getElementById('availableCouponsContainer');
            couponsContainer.innerHTML = ''; 

            coupons.forEach(coupon => {
                const couponElement = document.createElement('div');
                couponElement.classList.add('card', 'mb-3');

                const cardBody = document.createElement('div');
                cardBody.classList.add('card-body');

                const couponName = document.createElement('p');
                couponName.textContent = `Coupon Name: ${coupon.couponName}`;

                const couponCode = document.createElement('p');
                couponCode.textContent = `Coupon Code: ${coupon.couponCode}`;

                const couponDiscount = document.createElement('p');
                couponDiscount.textContent = `Discount: ${coupon.discountPercentage}%`;

                
                cardBody.appendChild(couponName);
                cardBody.appendChild(couponCode);
                cardBody.appendChild(couponDiscount);
                

                couponElement.appendChild(cardBody);
                couponsContainer.appendChild(couponElement);
            });

         
            const copyCouponButtons = document.querySelectorAll('.copy-coupon');

copyCouponButtons.forEach(button => {
  button.addEventListener('click', function(event) {
    event.preventDefault();
    const couponCode = button.getAttribute('data-code');
  
    const input = document.createElement('input');
    input.value = couponCode;
  document.body.appendChild(input);
  input.select();
  document.execCommand('copy');
  document.body.removeChild(input);

    const copyMessage = document.createElement('p');
    copyMessage.textContent = 'Coupon code copied successfully!';
    copyMessage.style.color = 'green';

 
    button.parentNode.appendChild(copyMessage);
  });
});
        }

      
        function copyToClipboard(text) {
  
}
    });
</script>












 