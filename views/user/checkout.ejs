<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Checkout </title>
    <!-- Bootstrap 5 CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KyZXEAg3QhqLMpG8r+8fhAXLRk2vvoC2f3B09zVXn8CA5QIVfZOJ3BCsw2P0p/We" crossorigin="anonymous">


	<!-- Demo CSS (No need to include it into your project) -->
	<link rel="stylesheet" href="css/demo.css">
  
  </head>
  <body>
    <%- include("header") %>
   

    

    <!-- <nav class="navbar navbar-expand-lg bg-body-tertiary fixed-top">
        <div class="container-fluid">
          <a class="navbar-brand" href="#">
            <img src="/assets/images/logo.png" alt="Logo" height="40">
          </a>
          <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
          </button>
          <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
              <li class="nav-item">
                <a class="nav-link active" aria-current="page" href="/userhome">Home</a>
              </li>
              <li class="nav-item">
                <a class="nav-link" href="#">About</a>
              </li>
              <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                  Category
                </a>
                <% console.log(categories); %>
                <ul class="dropdown-menu">
                  
                  <% categories.forEach(category => { %>
                    <% if (!category.isBlocked) { %>
                      <li><a class="dropdown-item" href="/products/<%= category.categoryName %>"><%= category.categoryName %></a></li>
                    <% } %>
                    <% }); %>
                </ul>
              </li>
              <li class="nav-item">
                <a class="nav-link" href="#">Contacts</a>
              </li>
            </ul>
            <form class="d-flex" role="search">
              <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
              <button class="btn btn-outline-success" type="submit">Search</button>
            </form>
            <div class="icons">
              <a href="/profile">
                <i class="fa fa-user text-dark" aria-hidden="true"></i>
              </a>
              <a href="/cart">
                <i class="fa fa-shopping-cart text-dark" aria-hidden="true"></i>
              </a>
              <a href="#">
                <i class="fa fa-heart text-dark" aria-hidden="true"></i>
              </a>
            </div>
          </div>
        </div>
      </nav> -->
 <header class="intro">
 <!-- <h1> Bootstrap 5 Checkout Form Example </h1>
 <p> A checkout form page with Bootstrap native input fields.</p> -->

 <!-- <div class="action">
 <a href="https://www.codehim.com/bootstrap/bootstrap-forms/bootstrap-5-checkout-form-page/" title="Back to download and tutorial page" class="btn back">Back to Tutorial</a>
 
 </div> -->
 
 </header>
  
 <main>
        <div class="container">
            <div class="py-5 text-center">
                <h2>Checkout</h2>
            </div>
          
            <form action="/placeorder" method="POST">
                <div class="row">
                    <!-- Addresses Column -->
                    <div class="col-md-8 order-md-1">
                        <div class="card mt-3">
                            <div class="card-header">
                                <h5 class="card-title">Shipping Address</h5>
                            </div>

                          

                            <div class="container">
                              <% if (addresses && addresses.length > 0) { %>
                                <% addresses?.forEach(data => { %>
                  
                                    <div class="col-md-4">
                                        <div class="card mb-2" style="width: 18rem;">
                                            <div class="card-body " style="height: 220px;">
                                              <div class="card-body d-flex flex-column justify-content-between" style="height: 220px;">
                                                <!-- Radio button with label -->
                                                <label for="<%= data._id %>" class="d-flex align-items-center">
                                                    <input type="radio" id="<%= data._id %>" name="selectedAddress" value="<%= data._id %>">
                                                    <p class="card-title mb-0 ms-2">Deliver to this address</p>
                                                </label>
                                                
                                                <h6 class="card-title "> <%= data.name %></h5>
                                                <h6 class="card-subtitle mb-2 "><%= data.street %></h6>
                                                <h6 class="card-subtitle mb-2 "><%= data.city %></h6>
                                                <h6 class="card-subtitle mb-2"><%= data.state %></h6>
                                                <h6 class="card-subtitle mb-2 "><%= data.pincode %></h6>
                                                <h6 class="card-subtitle mb-3 "><%= data.mobile %></h6>
                                              </div>
                                            </div>
                                        </div>
                                    </div>

                            
                            
                                <% }) %>
                            <% } else { %>
                                <p>No addresses found.</p>
                            <% } %>
                       

                            <% let totalPrice = 0; %>
                            <% let deliveryCharge = 50; %>
    <% userCart.items.forEach(item => { %>
        <% let itemPrice = item.productId.Price * item.quantity; %>
        <% totalPrice += itemPrice; %>
    <% }); %>


                            <div class="col">
                              <div class="card justify-content-center align-items-center" style="width: 18rem;">
                                  <div class="card-body" style="height: 220px;">
                                      <i class="fa fa-plus" id="addAddressIcon" aria-hidden="true" style="font-size: 100px;"></i><br>
                                      <p class="card-link justify-content-center align-items-center" id="addAddressBtn">Add Address</p>
                                  </div>
                            </div>
                        </div>
                        <div id="newAddressForm" style="display: none;">
                          <input type="text" id="name" placeholder="Name">
                          <input type="text" id="address" placeholder="Address">
                          <input type="text" id="pincode" placeholder="Pin Code">
                          <input type="text" id="city" placeholder="City">
                          <input type="text" id="street" placeholder="Street">
                          <input type="text" id="state" placeholder="State">
                          <input type="text" id="mobile" placeholder="Mobile">
                          <button id="saveAddressBtn" type="button">Save Address</button>
                      </div>
                      
                            </div>
                            </div>
                        <!-- Payment Section -->
                        <hr class="mb-4">
                        <h4 class="mb-3">Payment</h4>
                        
                          <div class="custom-control custom-radio">
                            <input id="credit" name="paymentMethod" type="radio" class="custom-control-input" value="Online Payment" checked required>
                            <label class="custom-control-label" for="credit">Online Payment</label>
                          </div>
                          <!-- Check if the total price is greater than 1000 -->
<% if (totalPrice > 1000) { %>
    <div class="custom-control custom-radio">
        <input id="debit" name="paymentMethod" type="radio" class="custom-control-input" value="Cash On Delivery" required disabled>
        <label class="custom-control-label" for="debit">Cash On Delivery (Not Available)</label>
    </div>
<% } else { %>
    <div class="custom-control custom-radio">
        <input id="debit" name="paymentMethod" type="radio" class="custom-control-input" value="Cash On Delivery" required>
        <label class="custom-control-label" for="debit">Cash On Delivery</label>
    </div>
<% } %>
                          <div class="custom-control custom-radio">
                            <input id="debit" name="paymentMethod" type="radio" class="custom-control-input" value="Wallet" required>
                            <label class="custom-control-label" for="debit">Wallet</label>
                          </div>
                    </div>

                    <!-- Your Cart Column -->
                    <div class="col-md-4 order-md-2 mb-4">
                        <h4 class="d-flex justify-content-between align-items-center mb-3">
                            <span class="text-muted">Your cart</span>
                           
                     
 
                            <span class="badge badge-secondary badge-pill">3</span>
                        </h4>
                        <ul class="list-group mb-3">
                          <% userCart.items.forEach(item => { %>
                            <li class="list-group-item d-flex justify-content-between lh-condensed">
                                <div class="d-flex flex-column">
                                    <div>
                                        <h6 class="my-0"><%= item.productId.ProductName%></h6>
                                    </div>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <small class="text-muted">Quantity: <%= item.quantity%>  </small>
                                        <span class="text-muted">  </span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Price:  ₹<%= item.productId.Price * item.quantity %></span>
                                    </div>
                                </div>
                            </li>
                        <% }); %>

                         <!-- Delivery charge (if applicable) -->
 <% if (totalPrice < 1000) { %>
    <li class="list-group-item d-flex justify-content-between">
        <span>Delivery Charge:</span>
        <strong>₹ <%= deliveryCharge  %> </strong> <!-- Example delivery charge -->

    </li>
<% } %>
                 
                     <!-- Total Price -->
        <li id="totalPrice" class="list-group-item d-flex justify-content-between" style="margin-top: 10px;">
            <span>Total Price:</span>
            <% if (totalPrice < 1000) { %> 
                <% totalPrice += deliveryCharge %>
                <% } %>
            <strong>₹ <%= totalPrice  %></strong>
        </li>



                    <!-- Coupon Code Input Field -->
                    <li class="list-group-item">
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="Enter Coupon Code" id="couponCodeInput">
                            <button class="btn btn-outline-secondary" type="button" id="applyCouponBtn">Apply</button>
                            <button class="btn btn-outline-secondary" type="button" id="removeCouponBtn" style="display: none;">Remove</button>
                        </div>
                    </li>
           </ul>
           <div id="errorContainer" style="display: none;" class="alert alert-danger" role="alert">
            <!-- Error message will be displayed here -->
        </div>
                        <form class="card p-2">              
                    </div>
                </div>
                <!-- Continue to checkout button -->
                <div class="row">
                  <div class="col-md-4 offset-md-8">
                      <hr class="mb-4">
                      <button class="btn btn-primary btn-lg btn-block" type="submit">Continue to checkout</button>
                  </div>
              </div>
            </form>
        </div>
    </main>
 
</form>
  
<!-- Bootstrap 5 JavaScript Bundle with Popper -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-U1DAWAznBHeqEIlVSCgzq+c9gqGAJn5c/t99JyeKa9xxaYpSvHU5awsuZVVFIhvj" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


  </body>
</html>
<%- include('../partials/user-footer')  %>

<script>
  // Client-side JavaScript code
 document.addEventListener('DOMContentLoaded', function() {
     // Event listener for Add Address button
     document.getElementById('addAddressBtn').addEventListener('click', function() {
         document.getElementById('newAddressForm').style.display = 'block'; // Show the new address form
     });
 
     // Event listener for Save Address button
     document.getElementById('saveAddressBtn').addEventListener('click', async function() {
         // Retrieve values from the input fields
         const name = document.getElementById('name').value;
         const address = document.getElementById('address').value;
         const pincode = document.getElementById('pincode').value;
         const city = document.getElementById('city').value;
         const street = document.getElementById('street').value;
         const state = document.getElementById('state').value;
         const mobile = document.getElementById('mobile').value;
 
         // Send the new address data to the server
         try {
             const response = await fetch('/checkoutaddaddress', {
                 method: 'POST',
                 headers: {
                     'Content-Type': 'application/json'
                 },
                 body: JSON.stringify({ name, address, pincode, city, street, state, mobile })
             });
             if (response.ok) {
                 // Address added successfully
                 document.getElementById('newAddressForm').style.display = 'none'; // Hide the form
                 // Fetch and update the address list dynamically
                 location.reload();
                 await updateAddressList();
             } else {
                 console.error('Failed to add address:', response.statusText);
             }
         } catch (error) {
             console.error('Error adding address:', error);
         }
     });
 
     // Function to fetch and update the address list dynamically
     async function updateAddressList() {
         try {
             const response = await fetch(`/getaddress/${addressId}`); // Assuming this endpoint returns the list of addresses
             if (response.ok) {
                 const addresses = await response.json();
                 const addressListContainer = document.getElementById('addressListContainer');
                 addressListContainer.innerHTML = ''; // Clear previous address list
                 addresses.forEach(address => {
                     const addressElement = document.createElement('div');
                     addressElement.textContent = address.name + ', ' + address.address;
                     addressListContainer.appendChild(addressElement);
                 });
             } else {
                 console.error('Failed to fetch addresses:', response.statusText);
             }
         } catch (error) {
             console.error('Error fetching addresses:', error);
         }
     }
 
     // Call the updateAddressList function on page load
     updateAddressList();
 });
 </script>

 <!-- Place this script at the end of the body section -->
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const paymentButton = document.getElementById('paymentButton');
        const checkoutForm = document.getElementById('checkoutForm');
        const paymentMethodRadio = document.querySelectorAll('input[name="paymentMethod"]');

        // Function to update button text and action
        function updatePaymentButton() {
            const selectedPaymentMethod = document.querySelector('input[name="paymentMethod"]:checked');
            if (selectedPaymentMethod && selectedPaymentMethod.value === 'Card') {
                paymentButton.textContent = 'Pay Now';
                checkoutForm.action = '/onlinepayment'; // Update form action for online payment
            } else {
                paymentButton.textContent = 'Place Order';
                checkoutForm.action = '/confirmorder'; // Update form action for other payment methods
            }
        }

        // Event listener for payment method change
        paymentMethodRadio.forEach(function(radio) {
            radio.addEventListener('change', updatePaymentButton);
        });

        // Initial call to update button text and action
        updatePaymentButton();
    });
</script>

<script>
   document.addEventListener('DOMContentLoaded', function() {
    // Check if the showCouponsBtn element exists
    const showCouponsBtn = document.getElementById('showCouponsBtn');
    if (showCouponsBtn) {
        // Add event listener only if the element exists
        showCouponsBtn.addEventListener('click', async function() {
            alert("asdfghj")
            try {
                const response = await fetch('/getcoupons'); // Replace '/getcoupons' with your actual endpoint
                if (response.ok) {
                    const coupons = await response.json();
                    // Assuming you have a function to display the coupons, update the DOM here
                    displayCoupons(coupons);
                } else {
                    console.error('Failed to fetch coupons:', response.statusText);
                }
            } catch (error) {
                console.error('Error fetching coupons:', error);
            }
        });
    } else {
        console.error('Element with id "showCouponsBtn" not found.');
    }

    // Function to display the coupons
    function displayCoupons(coupons) {
        // Assuming you have a container element to display the coupons
        const couponsContainer = document.getElementById('couponsContainer');
        couponsContainer.innerHTML = ''; // Clear previous coupons
        coupons.forEach(coupon => {
            // Create elements to display each coupon
            const couponElement = document.createElement('div');
            couponElement.textContent = `Coupon Name: ${coupon.name}, Coupon Code: ${coupon.code}, Discount: ${coupon.discount}%`;
            // Append coupon element to the container
            couponsContainer.appendChild(couponElement);
        });
    }
});

</script>
<script>
document.addEventListener('DOMContentLoaded', function() {
    const applyCouponBtn = document.getElementById('applyCouponBtn');
    const removeCouponBtn = document.getElementById('removeCouponBtn');
   
    document.getElementById('applyCouponBtn').addEventListener('click', async function() {
        const couponCode = document.getElementById('couponCodeInput').value;
        try {
            const response = await fetch('/applycoupon', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ couponCode: couponCode }),
            });
            if (response.ok) {
                const data = await response.json();
               
                document.getElementById('totalPrice').textContent = `Total Price: ₹ ${data.totalPrice}`;
                applyCouponBtn.style.display = 'none';
                    removeCouponBtn.style.display = 'block';
                console.log(data);
            } else {
                const errorData = await response.json(); // Parse the error JSON
            // Display the error message in the UI
            document.getElementById('errorContainer').style.display = 'block';
            document.getElementById('errorContainer').textContent = errorData.error;
            console.error('Failed to apply coupon:', errorData.error);
            }
        } catch (error) {
            console.error('Error applying coupon:', error);
        }
    });
    document.getElementById('removeCouponBtn').addEventListener('click', async function() {
    try {
        const response = await fetch('/removecoupon', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
        });
        if (response.ok) {
            const data = await response.json();
            // Update the total price displayed on the frontend with the original price (without discount)
            document.getElementById('totalPrice').textContent = `Total Price: ₹ ${data.totalPrice}`;
            const couponCode = document.getElementById('couponCodeInput')
            couponCode.value = ''
            applyCouponBtn.style.display = 'block';
            removeCouponBtn.style.display = 'none';
        } else {
            console.error('Failed to remove coupon:', response.statusText);
        }
    } catch (error) {
        console.error('Error removing coupon:', error);
    }
});
});
</script>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const continueToCheckoutBtn = document.querySelector('button[type="submit"]');
    const walletRadio = document.querySelector('input[value="Wallet"]');
    const totalPrice = <%= totalPrice %>;
    const walletAmount = <%= walletAmount %>;

    // Function to handle button click
    function handleButtonClick(event) {
        // Check if wallet payment method is selected and the button is clicked
        if (walletRadio.checked) {
            // Check if wallet balance is insufficient
            if (walletAmount < totalPrice) {
                // Display Swal message for insufficient wallet balance
                Swal.fire({
                    icon: 'error',
                    title: 'Insufficient Wallet Balance',
                    text: 'Please choose another payment method or add funds to your wallet.',
                });
                event.preventDefault(); // Prevent form submission
            }
        } else {
            // Check if no address is selected
            const selectedAddress = document.querySelector('input[name="selectedAddress"]:checked');
            if (!selectedAddress) {
                // Display Swal message for no address selected
                Swal.fire({
                    icon: 'error',
                    title: 'No Address Selected',
                    text: 'Please select a shipping address or add a new address before proceeding to checkout.',
                });
                event.preventDefault(); // Prevent form submission
            }
        }
    }
    
    // Event listener for button click
    continueToCheckoutBtn.addEventListener('click', handleButtonClick);
});


</script>


<script>
    document.addEventListener('DOMContentLoaded', function() {
        const cashOnDeliveryRadio = document.querySelector('input[value="Cash On Delivery"]');
        const totalPrice = <%= totalPrice %>;

        // Function to handle button state based on total price
        function handleButtonState() {
            // Disable the Cash On Delivery button if total price is greater than 1000
            if (totalPrice > 1000) {
                cashOnDeliveryRadio.disabled = true;
            } else {
                cashOnDeliveryRadio.disabled = false;
            }
        }

        // Call the function to set initial button state
        handleButtonState();

        // Add event listener for change in total price
        document.getElementById('totalPrice').addEventListener('change', handleButtonState);
    });
</script>










 