<!-- Admin Add Product Page -->
<%- include('header')-%>

  <div class="container-fluid">
    <div class="row">
      <!-- Sidebar -->
      <div class="col-md-3 col-lg-2 sidebar">
        <ul class="nav flex-column">
          <li class="nav-item">
            <a class="nav-link active" href="/admin/admindashboard">
              <i class="fa fa-home"></i> Dashboard
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/admin/adminproduct">
              <i class="fa fa-product-hunt"></i> Products
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/admin/category">
              <i class="fa fa-list"></i> Category
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/admin/customers">
              <i class="fa fa-users"></i> Customers
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/admin/brand">
              <i class="fa fa-users"></i> Brands
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/admin/order">
              <i class="fa fa-bars"></i> Orders
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/admin/coupon">
              <i class="fa fa-bars"></i> Coupons
            </a>
          </li>

          <li class="nav-item">
            <a class="nav-link active" href="/admin/categoryoffer">
              <i class="fa fa-percent"></i> Category Offers
            </a>
          </li>
          
          <li class="nav-item">
            <a class="nav-link" href="/admin/banner">
              <i class="fa fa-bars"></i> Banners
            </a>
          </li>
         
        
          <li class="nav-item">
            <a class="nav-link" href="/admin/sales">
              <i class="fa fa-line-chart"></i> Sales
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/admin/logout">
              <i class="fa fa-sign-out"></i> Logout
            </a>
          </li>
        </ul>
      </div>

      <div class="container mt-5 mt-lg-1 shadow-lg rounded-2">

        <div class="container-fluid">
          <div class="row ">
            <main class="px-md-4 icons">
              <div class="row d-flex justify-content-between">
                <div class="col-md-8">
                  <h1 class="mt-2 text-white">Add Product</h1>

                  <form onsubmit="formSubmitted()" enctype="multipart/form-data"
                    class="card p-3 bg-light mb-3 text-dark text-shadow" id="myForm">
                    <% if (messages.success) { %>
                      <div class="alert alert-success">
                        <%= messages.success %>
                      </div>
                      <% }else if (messages.error){ %>
                        <div class="alert alert-danger">
                          <%= messages.error %>
                        </div>
                        <%}%>

                          <div class="form-group">
                            <label for="productName">Product Name:</label>
                            <input type="text" name="ProductName" class="form-control bg-light" id="productName"
                              placeholder="Enter product name" />
                            <div id="nameError"></div>
                          </div>
                          <br>


                          <label for="isnewarrival">
                            <input type="checkbox" name="isNewArrival" id="isnewarrival">
                            New Arrivals
                          </label>
                          <br>

                          <label for="isnewtrends">
                            <input type="checkbox" name="isNewTrends" id="isnewtrends">
                            New Trends
                          </label>
                          <br>
                          <div class="form-group">
                            <label for="productDescription">Product Description:</label>
                            <textarea class="form-control bg-light" name="Description" id="productDescription" rows="4"
                              placeholder="Enter product description"></textarea>
                            <div id="DescriptionError"></div>
                          </div>

                          <br>

                          <br>



                          <div class="bg-light">
                            <h3>Media</h3>
                            <div class="form-group my-2">
                              <label for="image1">Image 1:</label>
                              <input type="file" name="image1" class="form-control imageInput" id="image1" accept="image/*" />
                              <img src="" alt="Image 1" class="img-fluid imagePreview" style="max-height: 50px; width: auto; display: none;" />
                              <div class="cropper-container" style="display: none; width: fit-content;">
                                <img id="cropperImage" src="" alt="Cropper Image" />
                              </div>
                              <button type="button" class="btn btn-primary cropButton" style="display: none;">Crop Image</button>
                            </div>
                            <div id="fileError"></div>
                            <div class="form -group my-2">
                              <label for="image2">Image 2:</label>
                              <input type="file" name="image2" class="form-control imageInput" id="image2" accept="image/*" />
                              <img src="" alt="Image 2" class="img-fluid imagePreview" style="max-height: 50px; width: auto; display: none;" />
                              <div class="cropper-container" style="display: none; width: fit-content;">
                                <img id="cropperImage2" src="" alt="Cropper Image" />
                              </div>
                              <button type="button" class="btn btn-primary cropButton" style="display: none;">Crop Image</button>
                            </div>
                            <div class="form-group my-2">
                              <label for="image3">Image 3:</label>
                              <input type="file" name="image3" class="form-control imageInput" id="image3" accept="image/*" />
                              <img src="" alt="Image 3" class="img-fluid imagePreview" style="max-height: 50px; width: auto; display: none;" />
                              <div class="cropper-container" style="display: none; width: fit-content;">
                                <img id="cropperImage3" src="" alt="Cropper Image" />
                              </div>
                              <button type="button" class="btn btn-primary cropButton" style="display: none;">Crop Image</button>
                            </div>
                          </div>


                          <div class="">
                            <h2>Pricing</h2>
                            <div class="form-group">
                              <label for="basePrice">Base Price:</label>
                              <input type="number" name="Price" class="form-control bg-light" id="basePrice"
                                placeholder="Enter base price" />
                              <div id="priceError"></div>
                            </div>

                            <br>
                            

                          </div>


                          <div class="">
                            <h2>Stock</h2>

                            <div class="form-group">
                              <label for="quantity">Quantity:</label>
                              <input type="number" name="AvailableQuantity" class="form-control bg-light" id="quantity"
                                placeholder="Enter quantity" />
                              <div id="stockError"></div>
                            </div>

                          </div>
                </div>

                <div class="col-md-4 my-5 py-3">
                  <div class="bg-light text-light p-3 rounded border">
                    <div class="form-group">
                      <br>
                      <label for="category">Category:</label>
                      <select class="form-select bg-light" id="category" name="Category" id="productCategory">
                        <option value="" selected disabled>Select a category</option>
                        <% categories.forEach(function(category) { %>
                          <option value="<%=category.categoryName %>">
                            <%=category.categoryName%>
                          </option>
                          <% }); %>
                      </select>
                      <div id="categoryError"></div>
                    </div>

                    <br>
                    <div class="form-group">
                      <br>
                      <label for="brandName">Brand Name:</label>
                      <select name="BrandName" class="form-select bg-light" id="brand">
                        <option value="" selected disabled>Select a Brand</option>
                        <% brands.forEach(function(brand) { %>
                          <option value="<%=brand.brandName%>">
                            <%=brand.brandName%>
                          </option>
                          <% }); %>
                      </select>
                      <div id="BrandError"></div>
                    </div>

                    <br>
                    <div class="d-flex justify-content-end">

                      <input type="hidden" name="croppedImage1" id="croppedImage1">
                      <input type="hidden" name="croppedImage2" id="croppedImage2">
                      <input type="hidden" name="croppedImage3" id="croppedImage3">

                      <button type="submit" id="addproduct" class="btn btn-primary mt-3 mb-0">Add Product</button>
                    </div>
                  </div>
                </div>
                </form>
              </div>
            </main>
          </div>
        </div>



 <!-- Modal for image cropping -->
 <div class="modal fade" id="imageCropModal" tabindex="-1" aria-labelledby="imageCropModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="imageCropModalLabel">Crop Image</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <img src="" id="cropperImage" alt="Cropped Image" style="max-width: 100%;">
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" id="cropImageBtn">Crop Image</button>
      </div>
    </div>
  </div>
</div>



<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>




        

<script>
  const croppers = {};

  function initCropper(imageInput, imagePreview, cropperContainer, cropButton, no) {
    imageInput.addEventListener('change', () => {
      const file = imageInput.files[0];
      if (file) {
        const reader = new FileReader();
        reader.onload = () => {
          imagePreview.style.display = 'block';
          imagePreview.src = reader.result;
          cropperContainer.style.display = 'block';
          cropButton.style.display = 'inline-block';

          const image = cropperContainer.querySelector('img');
          image.src = reader.result;

          if (!croppers[no]) {
            croppers[no] = new Cropper(image, {
              aspectRatio: 1,
              guides: true,
              autoCropArea: 0.8,
              movable: true,
              rotatable: true,
              scalable: true,
              zoomable: true,
            });
          } else {
            croppers[no].replace(reader.result);
          }
        };
        reader.readAsDataURL(file);
      }
    });

    cropButton.addEventListener('click', () => {
      const cropper = croppers[no];
      if (cropper) {
        const croppedCanvas = cropper.getCroppedCanvas();
        if (croppedCanvas) {
          const croppedImage = croppedCanvas.toDataURL('image/jpeg');
          console.log("Cropped Image Data: ", croppedImage);
          const fileName = `cropped_${no}.png`; 
          const croppedBlob = dataURItoBlob(croppedImage);
          const croppedFile = new File([croppedBlob], fileName, { type: 'image/png' });
          const newFileList = new DataTransfer();
          newFileList.items.add(croppedFile);
          imageInput.files = newFileList.files;
          imagePreview.src = croppedImage;
          cropperContainer.style.display = 'none';
          cropButton.style.display = 'none';
        } else {
          console.error("Failed to crop image.");
        }
      } else {
        console.error("Cropper not found.");
      }
    });
  }

  function dataURItoBlob(dataURI) {
    const byteString = atob(dataURI.split(',')[1]);
    const mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];
    const arrayBuffer = new ArrayBuffer(byteString.length);
    const intArray = new Uint8Array(arrayBuffer);
    for (let i = 0; i < byteString.length; i++) {
        intArray[i] = byteString.charCodeAt(i);
    }
    return new Blob([arrayBuffer], { type: mimeString });
  }

  const imageInput1 = document.getElementById('image1');
  const imagePreview1 = document.querySelector('#image1 ~ .imagePreview');
  const cropperContainer1 = document.querySelector('#image1 ~ .cropper-container');
  const cropButton1 = document.querySelector('#image1 ~ .cropButton');
  initCropper(imageInput1, imagePreview1, cropperContainer1, cropButton1, 1);

  const imageInput2 = document.getElementById('image2');
  const imagePreview2 = document.querySelector('#image2 ~ .imagePreview');
  const cropperContainer2 = document.querySelector('#image2 ~ .cropper-container');
  const cropButton2 = document.querySelector('#image2 ~ .cropButton');
  initCropper(imageInput2, imagePreview2, cropperContainer2, cropButton2, 2);

  const imageInput3 = document.getElementById('image3');
  const imagePreview3 = document.querySelector('#image3 ~ .imagePreview');
  const cropperContainer3 = document.querySelector('#image3 ~ .cropper-container');
  const cropButton3 = document.querySelector('#image3 ~ .cropButton');
  initCropper(imageInput3, imagePreview3, cropperContainer3, cropButton3, 3);
</script>





        <script>
          function formSubmitted(event) {
    event.preventDefault();  

    // Get form data
    const form = document.getElementById('myForm');
    const formData = new FormData(form);

     

    // validation
    var imageInputs = document.querySelectorAll('.imageInput');
            var productNameInput = document.getElementById('productName');
            var productCategoryInput = document.getElementById('category');
            var productPriceInput = document.getElementById('basePrice');
            var productStockInput = document.getElementById('quantity');
            var productDiscountAmountInput = document.getElementById('discountAmount');
            var productDescriptionInput = document.getElementById('productDescription');
            var productBrandInput = document.getElementById('brand');

             
            console.log(productCategoryInput, 'productCategoryInput');
            console.log(productPriceInput, 'productPriceInput');
            console.log(productStockInput, 'productStockInput');
            console.log(productDiscountAmountInput, 'productDiscountAmountInput');
            console.log(productDescriptionInput, 'productDescriptionInput');
            console.log(productBrandInput, 'productBrandInput');

        
            var nameError = document.getElementById('nameError');
            var categoryError = document.getElementById('categoryError');
            var priceError = document.getElementById('priceError');
            var stockError = document.getElementById('stockError');
            var discountAmountError = document.getElementById('DiscountAmountError');
            var descriptionError = document.getElementById('DescriptionError');
            var brandError = document.getElementById('BrandError');
            var fileError = document.getElementById('fileError');
            let isValid = [];  
            // Name 
            if (productNameInput.value.trim() === '') {
              nameError.textContent = 'Please enter a name.';
              nameError.style.display = 'block';
              nameError.style.color = 'red';
              isValid.push(false);  
            } else {
              nameError.textContent = '';
              nameError.style.display = 'none';
              isValid.push(true); 
            }
        
        
            // Description
            if (productDescriptionInput.value.trim() === '') {
              descriptionError.textContent = 'Please enter a description.';
              descriptionError.style.display = 'block';
              descriptionError.style.color = 'red';
              isValid.push(false);
            } else {
              descriptionError.textContent = '';
              descriptionError.style.display = 'none';
              isValid.push(true);
            }
        
            // Category
            if (productCategoryInput.value.trim() === '') {
              categoryError.textContent = 'Please enter a category.';
              categoryError.style.display = 'block';
              categoryError.style.color = 'red';
              isValid.push(false);
            } else {
              categoryError.textContent = '';
              categoryError.style.display = 'none';
              isValid.push(true);
            }
        
            // Brand
            if (productBrandInput.value.trim() === '') {
              brandError.textContent = 'Please enter a brand.';
              brandError.style.display = 'block';
              brandError.style.color = 'red';
              isValid.push(false);
            } else {
              brandError.textContent = '';
              brandError.style.display = 'none';
              isValid.push(true);
            }
        
            // Price
            var priceValue = parseFloat(productPriceInput.value);
            if (isNaN(priceValue) || priceValue <= 0) {
              priceError.textContent = 'Please enter a valid positive price.';
              priceError.style.color = 'red';
              priceError.style.display = 'block';
              isValid.push(false);
            } else {
              priceError.textContent = '';
              priceError.style.display = 'none';
              isValid.push(true);
            }
        
            // Stock
            var stockValue = parseFloat(productStockInput.value);
            if (isNaN(stockValue) || stockValue <= 0) {
              stockError.textContent = 'Please enter a valid positive number.';
              stockError.style.color = 'red';
              stockError.style.display = 'block';
              isValid.push(false);
            } else {
              stockError.textContent = '';
              stockError.style.display = 'none';
              isValid.push(true);
            }
        
        for(let i = 0; i < isValid.length; i++){
        if(isValid[i] === false){
        return
        }
        }
    fetch('/admin/addproduct', {
      method: 'POST',
      body: formData,
    })
      .then(response => {
        
        if (response.ok) {
          
          console.log('Product added successfully');
          window.location.href = '/admin/adminproduct'
           
        } else {
        
          console.error('Failed to add product');
           
        }
      })
      .catch(error => {
        console.error('Error:', error);
         
      });
  }

  
  const form = document.getElementById('myForm');
  form.addEventListener('submit', formSubmitted);


 
  const imageInput = document.querySelectorAll('.imageInput');
  const imagePreview = document.querySelectorAll('.imagePreview');

  imageInput.forEach((input, index) => {
    input.addEventListener('change', function () {
      const file = input.files[0];

      if (file) {
        const reader = new FileReader();

        reader.onload = function (e) {
          imagePreview[index].src = e.target.result;
          imagePreview[index].style.display = 'block';
        };

        reader.readAsDataURL(file);
      } else {
        imagePreview[index].src = '';
        imagePreview[index].style.display = 'none';
      }
    });
  });

  </script>
        

        <%- include('footer')-%>